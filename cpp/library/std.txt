//cout精度
cout << fixed << setprecision(15);

//連続する要素を一つにする
void erase_continuous(vector<ll> &A) {
  sort(rng(A));
  A.erase(unique(rng(A)), A.end());
}

//map for文
map<ll, ll> mp;
for (const auto& [key, value] : mp){
  std::cout << key << " => " << value << "\n";
}
if (mp.find(key) != mp.end()) {
  //どっかにある
}

//set for文
for(auto itr = st.begin(); itr != st.end(); ++itr) {
}
//set降順
set<ll, greater<ll>>

//sort
bool compare(vector<int> a, vector<int> b) {
  return a.at(1) <= b.at(1);
}
sort(ab.begin(), ab.end(), compare);

//popcount
__builtin_popcountll

//bitset
bitset<250000> a;
a.set(x);
a.reset(x);

//変角ソート
atan2(y, x)//[-π, π]で返す(long double)
第3,4,1,2の順番で帰ってくる

//文字⇔int
to_string(A)
stoi(A)

//move
vector<vector<ll>> moves = {{1, 0}, {0, 1}, {1, 1}};

//8方向をチェックする
for (ll i = 0; i < h; ++i) {
  for (ll j = 0; j < w; ++j) {
    ll a = i * w + j;
    for (ll k = -1; k <= 1; ++k) {
      for (ll l = -1; l <= 1; ++l) {
        if ((0 <= (i + k)) && ((i + k) < h) && (0 <= (j + l)) && ((j + l) < w)) {
          ll b = (i + k) * w + (j + l);
          if (land.at(i + k).at(j + l) == land.at(i).at(j)) {
            uf.unite(a, b);
          }
        }
      }
    }
  }
}

//エラーをファイルに出力
./compile.sh 2> error.txt

//-----------marason----------
//時間測定
clock_t start = clock();
clock_t end = clock();
if ((double)(end - start) / CLOCKS_PER_SEC > time) {
  break;
}
